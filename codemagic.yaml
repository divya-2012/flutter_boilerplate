workflows:
  android-workflow:
    name: Android Build
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      flutter: stable
      groups:
        - keystore_credentials
      vars:
        PACKAGE_NAME: "com.yourcompany.yourapp"
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Fix Flutter Gradle Plugin Application
        script: |
          # Update both build.gradle and settings.gradle files
          cd "$CM_BUILD_DIR/android"
          
          # Fix app/build.gradle
          if grep -q "apply from:.*flutter.gradle" app/build.gradle; then
            echo "Updating app/build.gradle to use declarative plugin syntax"
            # Remove the old apply from line
            sed -i.bak 's/apply from: ".*flutter.gradle"//' app/build.gradle
            # Add the Flutter plugin to plugins block
            sed -i.bak '/plugins {/a\\    id "dev.flutter.flutter-gradle-plugin"' app/build.gradle
          fi
          
          # Fix settings.gradle
          if grep -q "ext.flutterPluginVersion = 'managed'" settings.gradle; then
            echo "settings.gradle already uses new plugin management"
          else
            echo "Updating settings.gradle to use plugin management"
            cat > settings.gradle << 'EOL'
include ':app'

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id 'dev.flutter.flutter-plugin-loader' version '1.0.0'
}

// This file is auto-generated. Do not edit.
rootProject.name = 'android'
EOL
          fi
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Build Debug APK
        script: |
          flutter build apk --debug
      - name: Build AAB
        script: |
          flutter build appbundle --release
      - name: Build APK
        script: |
          flutter build apk --release
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt

  build-debug-apk:
    name: Debug APK Build
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      flutter: stable
    scripts:
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Fix Flutter Gradle Plugin Application
        script: |
          # Update both build.gradle and settings.gradle files
          cd "$CM_BUILD_DIR/android"
          
          # Fix app/build.gradle
          if grep -q "apply from:.*flutter.gradle" app/build.gradle; then
            echo "Updating app/build.gradle to use declarative plugin syntax"
            # Remove the old apply from line
            sed -i.bak 's/apply from: ".*flutter.gradle"//' app/build.gradle
            # Add the Flutter plugin to plugins block
            sed -i.bak '/plugins {/a\\    id "dev.flutter.flutter-gradle-plugin"' app/build.gradle
          fi
          
          # Fix settings.gradle
          if grep -q "ext.flutterPluginVersion = 'managed'" settings.gradle; then
            echo "settings.gradle already uses new plugin management"
          else
            echo "Updating settings.gradle to use plugin management"
            cat > settings.gradle << 'EOL'
include ':app'

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id 'dev.flutter.flutter-plugin-loader' version '1.0.0'
}

// This file is auto-generated. Do not edit.
rootProject.name = 'android'
EOL
          fi
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Build Debug APK
        script: |
          flutter build apk --debug
    artifacts:
      - build/**/outputs/**/*.apk
